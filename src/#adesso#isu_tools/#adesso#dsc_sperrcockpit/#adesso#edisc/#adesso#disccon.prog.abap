*****           Implementation of object type /ADESSO/DC           *****
INCLUDE <OBJECT>.
BEGIN_DATA OBJECT. " Do not change.. DATA is generated
* only private members may be inserted into structure private
DATA:
" begin of private,
"   to declare private attributes remove comments and
"   insert private attributes here ...
" end of private,
  BEGIN OF KEY,
      NUMBER LIKE EDISCDOC-DISCNO,
  END OF KEY.
END_DATA OBJECT. " Do not change.. DATA is generated


TYPE-POOLS ISU05.

BEGIN_METHOD CHECKAENDERUNG CHANGING CONTAINER.
DATA:NUMBER LIKE EDISCDOC-DISCNO,
      ERG LIKE EWXGEN-IVALUE,
      OBJCLAS LIKE CDHDR-OBJECTCLAS,
      UNAME LIKE CDHDR-USERNAME,
      AEDAT LIKE CDHDR-UDATE,
      TAB_CDHDR LIKE CDHDR OCCURS 0 WITH HEADER LINE,
      CHANGEID LIKE CDHDR-CHANGE_IND.

TABLES CDHDR.
CLEAR: OBJCLAS, UNAME, AEDAT, CHANGEID.

SWC_GET_ELEMENT CONTAINER 'ObjectClass' OBJCLAS.
SWC_GET_ELEMENT CONTAINER 'Uname' UNAME.
SWC_GET_ELEMENT CONTAINER 'Aedat' AEDAT.
SWC_GET_ELEMENT CONTAINER 'ChangeId' CHANGEID.
SWC_GET_ELEMENT CONTAINER 'NUMBER' NUMBER.

IF OBJCLAS IS INITIAL. OBJCLAS = 'ISU_EDCN'. ENDIF.
IF AEDAT IS INITIAL. AEDAT = SY-DATUM. ENDIF.

SELECT * FROM CDHDR INTO TABLE TAB_CDHDR
             WHERE OBJECTCLAS = OBJCLAS
             AND OBJECTID = NUMBER
             AND UDATE = AEDAT
             AND CHANGE_IND = CHANGEID
             AND USERNAME = UNAME.
IF SY-SUBRC = 0.
  ERG = '0'.                    " Änderung
ELSE.
  ERG = '1'.                    " keine Änderung
ENDIF.

SWC_SET_ELEMENT CONTAINER 'Ergebnis' ERG.
END_METHOD.

BEGIN_METHOD ZCREATEMITRUECKGABEPARAM CHANGING CONTAINER.
DATA:
      DISCONNECTIONREASON LIKE EDISCDOC-DISCREASON,
      REFERENCEOBJECT     TYPE SWC_OBJECT,
      REFOBJTYPE          LIKE EDISCDOC-REFOBJTYPE,
      REFOBJKEY           LIKE EDISCDOC-REFOBJKEY,
      ETYPE               LIKE REGEN-EXIT_TYPE,
      WEDISCDOC           LIKE EDISCDOC,
      DATABASEUPDATE      LIKE REGEN-DB_UPDATE.

SWC_GET_ELEMENT CONTAINER 'DisconnectionReason' DISCONNECTIONREASON.
IF SY-SUBRC <> 0.
  EXIT_RETURN '1002' 'DisconnectionReason' SPACE SPACE SPACE.
ENDIF.
SWC_GET_ELEMENT CONTAINER 'ReferenceObject' REFERENCEOBJECT.
IF SY-SUBRC = 0.
  SWC_GET_OBJECT_TYPE REFERENCEOBJECT REFOBJTYPE.
  IF SY-SUBRC = 0.
    SWC_GET_OBJECT_KEY REFERENCEOBJECT REFOBJKEY.
    IF SY-SUBRC <> 0.
      CLEAR: REFOBJTYPE, REFOBJKEY.
    ENDIF.
  ELSE.
    CLEAR: REFOBJTYPE, REFOBJKEY.
  ENDIF.
ENDIF.
CALL FUNCTION 'ISU_S_DISCDOC_CREATE'
  EXPORTING
    X_DISCREASON   = DISCONNECTIONREASON
    X_REFOBJTYPE   = REFOBJTYPE
    X_REFOBJKEY    = REFOBJKEY
    X_UPD_ONLINE   = 'X'
  IMPORTING
    Y_DB_UPDATE    = DATABASEUPDATE
    Y_EXIT_TYPE    = ETYPE
    Y_NEW_EDISCDOC = WEDISCDOC
  EXCEPTIONS
    EXISTING       = 1
    FOREIGN_LOCK   = 2
    NOT_AUTHORIZED = 3
    INPUT_ERROR    = 4
    GENERAL_FAULT  = 5
    OTHERS         = 6.
IF SY-SUBRC = 0.
  IF ETYPE = 'CANC' OR WEDISCDOC-DISCNO IS INITIAL.
    EXIT_CANCELLED.
  ENDIF.
ELSE.
  EXIT_RETURN '1001' SPACE SPACE SPACE SPACE.
ENDIF.
SWC_SET_OBJECTKEY WEDISCDOC-DISCNO.
SWC_REFRESH_OBJECT SELF.
SWC_CONTAINER CONT.
SWC_CALL_METHOD SELF 'EXISTENCECHECK' CONT.
IF SY-SUBRC <> 0.
  SWC_REFRESH_OBJECT SELF.
  CLEAR OBJECT-KEY.
  SWC_SET_OBJECTKEY OBJECT-KEY.
  EXIT_RETURN '1001' SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
SWC_SET_ELEMENT CONTAINER 'DatabaseUpdate' DATABASEUPDATE.
END_METHOD.

BEGIN_METHOD EDITMITRUECKGABEPARAMETER CHANGING CONTAINER.
DATA:
      MSGTEXT1 LIKE SY-MSGV1,
      MSGTEXT2 LIKE SY-MSGV2,
      ETYPE    LIKE EBAGEN-EXIT_TYPE,
      DATABASEUPDATE LIKE REGEN-DB_UPDATE,
      L_INTERFACE TYPE ISU05_DISCDOC_AUTO-INTERFACE,
      BEGIN OF L_DISCACT_KEY,
        DOCUMENTNUMBER TYPE DISCNO,
        ACTIVITYNUMBER TYPE DISCACT,
      END OF L_DISCACT_KEY,
      LO_NEWDISACTION TYPE SWC_OBJECT,
      L_DISCACTTYP TYPE DISCACTTYP,
      L_ISORDER TYPE KENNZX.

CALL FUNCTION 'ISU_S_DISCDOC_CHANGE'
  EXPORTING
    X_DISCNO                 = OBJECT-KEY-NUMBER
    X_UPD_ONLINE             = 'X'
    X_NO_DIALOG              = ' '
    X_NO_OTHER               = 'X'
*   X_DISCACT                =
  IMPORTING
    Y_DB_UPDATE              = DATABASEUPDATE
    Y_EXIT_TYPE              = ETYPE
*   Y_NEW_EDISCDOC           =
    Y_INTERFACE              = L_INTERFACE  " HAS20031216
  EXCEPTIONS
   NOT_FOUND                = 1
   FOREIGN_LOCK             = 2
   NOT_AUTHORIZED           = 3
   INPUT_ERROR              = 4
   GENERAL_FAULT            = 5
   OTHERS                   = 6.

IF SY-SUBRC EQ 0.
  SWC_REFRESH_OBJECT SELF.
ELSEIF SY-SUBRC EQ 1. "not_found
  CONCATENATE TEXT-N00 OBJECT-KEY-NUMBER INTO MSGTEXT1
                 SEPARATED BY SPACE.
  EXIT_RETURN '1002' SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ELSEIF SY-SUBRC EQ 2. "foreign-lock
  EXIT_RETURN '1003' SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ELSEIF SY-SUBRC EQ 3.
  CONCATENATE TEXT-N00 OBJECT-KEY-NUMBER INTO MSGTEXT1
 SEPARATED BY SPACE.
  EXIT_RETURN '1004' SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ELSEIF SY-SUBRC EQ 4.
  EXIT_RETURN '1005' SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ELSEIF SY-SUBRC GE 5. "general_fault + others
  WRITE OBJECT-KEY-NUMBER TO MSGTEXT1 NO-ZERO.
  EXIT_RETURN '1001' MSGTEXT1 SPACE SPACE SPACE.
ENDIF.

L_DISCACT_KEY-ACTIVITYNUMBER = L_INTERFACE-Y_NEW_DISCACT.

IF L_DISCACT_KEY-ACTIVITYNUMBER EQ '0000'.
  IF ETYPE = 'CANC'.
    EXIT_CANCELLED.
  ENDIF.
ELSE.
  SWC_GET_OBJECT_KEY SELF L_DISCACT_KEY-DOCUMENTNUMBER.
  SWC_CREATE_OBJECT LO_NEWDISACTION 'DISACTION' L_DISCACT_KEY.
  SWC_GET_PROPERTY LO_NEWDISACTION 'Category' L_DISCACTTYP.
  IF L_DISCACTTYP = '01' OR L_DISCACTTYP = '03'.
    L_ISORDER = 'X'.
  ENDIF.
ENDIF.
SWC_SET_ELEMENT CONTAINER 'NewDisaction' LO_NEWDISACTION.
SWC_SET_ELEMENT CONTAINER 'IsOrder' L_ISORDER.
SWC_SET_ELEMENT CONTAINER 'DatabaseUpdate' DATABASEUPDATE.
END_METHOD.

BEGIN_METHOD ZISUDBZLWEDISCDOCWBREAD CHANGING CONTAINER.
DATA:
      XDISCNO TYPE EDISCDOC-DISCNO,
      XDISCACT TYPE EDISCACT-DISCACT,
      YERROR TYPE REGEN-KENNZX,
      YZLWEDISCDOCWB LIKE /ADESSO/SPT_WBSB,
      ISUSWITCHD TYPE SWC_OBJECT.

XDISCNO = OBJECT-KEY-NUMBER.

CALL FUNCTION '/ADESSO/ISU_DB_ZLWDD_WB_READ'
  EXPORTING
    X_DISCNO         = XDISCNO
    X_DISCACT        = XDISCACT
    X_CREATE_EVENT   = 'X'
  IMPORTING
    Y_ERROR          = YERROR
    Y_ZLWEDISCDOC_WB = YZLWEDISCDOCWB
  EXCEPTIONS
    OTHERS           = 01.
CASE SY-SUBRC.
  WHEN 0.            " OK
  WHEN OTHERS.       " to be implemented
ENDCASE.

SWC_SET_ELEMENT CONTAINER 'YError' YERROR.
SWC_CREATE_OBJECT ISUSWITCHD 'ISUSWITCHD' YZLWEDISCDOCWB-WECHSELBELEG.
SWC_SET_ELEMENT CONTAINER 'ISUSWITCHD' ISUSWITCHD.
END_METHOD.

BEGIN_METHOD ZLWCREATESWTFORDISCONALL CHANGING CONTAINER.
DATA:
      XDISCNO TYPE EDISCDOC-DISCNO,
      XDISCACT TYPE EDISCACT-DISCACT,
      XORDSTATE TYPE EDISCACTS-ORDSTATE,
      XTRANSREASON TYPE EIDESWTMSGDATA-TRANSREASON,
      XCATEGORY TYPE EIDESWTMSGDATA-CATEGORY,
      YBAPIRETURN LIKE BAPIRETURN1,
      YERROR TYPE REGEN-KENNZX,
      YSWITCHNUM TYPE EIDESWTDOC-SWITCHNUM,
      YDISCACTTYP TYPE EDISCACT-DISCACTTYP,
      YDISCACT TYPE EDISCACT-DISCACT,
      YACTDATE TYPE EDISCACT-ACTDATE,
      I_SUBRC TYPE SY-SUBRC.

XDISCNO = OBJECT-KEY-NUMBER.
SWC_GET_ELEMENT CONTAINER 'XDiscact' XDISCACT.
SWC_GET_ELEMENT CONTAINER 'XOrdstate' XORDSTATE.
SWC_GET_ELEMENT CONTAINER 'XTransreason' XTRANSREASON.
SWC_GET_ELEMENT CONTAINER 'XCategory' XCATEGORY.

CALL FUNCTION '/ADESSO/CRSWT_FOR_DISCON_ALL'
  EXPORTING
    X_CATEGORY    = XCATEGORY
    X_TRANSREASON = XTRANSREASON
    X_DISCACT     = XDISCACT
    X_DISCNO      = XDISCNO
    X_COMMIT      = 'X'
  IMPORTING
    Y_BAPIRETURN  = YBAPIRETURN
    Y_ERROR       = YERROR
    Y_SWITCHNUM   = YSWITCHNUM
    Y_DISCACTTYP  = YDISCACTTYP
    Y_DISCACT     = YDISCACT
    Y_ACTDATE     = YACTDATE
  EXCEPTIONS
    ZGPKE_551     = 9001
    ZGPKE_552     = 9002
    ZGPKE_553     = 9003
    ZGPKE_554     = 9004
    ZGPKE_555     = 9005
    ZGPKE_556     = 9006
    ZGPKE_557     = 9007
    ZGPKE_558     = 9008
    ZGPKE_559     = 9009
    ZGPKE_561     = 9010
    OTHERS        = 01.
I_SUBRC = SY-SUBRC.

SWC_SET_ELEMENT CONTAINER 'YError' YERROR.
SWC_SET_ELEMENT CONTAINER 'YBapiReturn' YBAPIRETURN.

CASE I_SUBRC.
  WHEN 0.            " OK
  WHEN 9001.                                                " ZGPKE_551
    EXIT_RETURN 9001 SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  WHEN 9002.                                                " ZGPKE_552
    EXIT_RETURN 9002 SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  WHEN 9003.                                                " ZGPKE_553
    EXIT_RETURN 9003 SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  WHEN 9004.                                                " ZGPKE_554
    EXIT_RETURN 9004 SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  WHEN 9005.                                                " ZGPKE_555
    EXIT_RETURN 9005 SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  WHEN 9006.                                                " ZGPKE_556
    EXIT_RETURN 9006 SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  WHEN 9007.                                                " ZGPKE_557
    EXIT_RETURN 9007 SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  WHEN 9008.                                                " ZGPKE_558
    EXIT_RETURN 9008 SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  WHEN 9009.                                                " ZGPKE_559
    EXIT_RETURN 9009 SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  WHEN 9010.                                                " ZGPKE_561
    EXIT_RETURN 9010 SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  WHEN OTHERS.       " to be implemented
ENDCASE.
END_METHOD.

BEGIN_METHOD ZLWEDISCDOCDATA CHANGING CONTAINER.
DATA:
      XDISCNO TYPE EDISCDOC-DISCNO,
      YBAPIRETURN LIKE BAPIRETURN1,
      YERROR TYPE REGEN-KENNZX,
      YEDISCDOC TYPE EDISCDOC,
      YEDISCACT TYPE EDISCACT,
      YDISCACT_STORNO TYPE EDISCACT,
      YCOMMENTTXT TYPE EIDESWTMSGDATACO-COMMENTTXT,
      YORDSTATE TYPE EDISCACT-ORDSTATE,
      XHVORG TYPE DFKKOP-HVORG,
      XTVORG TYPE DFKKOP-TVORG.

XDISCNO = OBJECT-KEY-NUMBER.

CALL FUNCTION '/ADESSO/LW_EDISCDOC_DATA'
  EXPORTING
    X_DISCNO         = XDISCNO
  IMPORTING
    Y_BAPIRETURN     = YBAPIRETURN
    Y_ERROR          = YERROR
    Y_EDISCDOC       = YEDISCDOC
    Y_EDISCACT       = YEDISCACT
    Y_DISCACT_STORNO = YDISCACT_STORNO
    Y_COMMENTTXT     = YCOMMENTTXT
    Y_ORDSTATE       = YORDSTATE
  EXCEPTIONS
    ZGPKE_551        = 01
    ZGPKE_552        = 02
    OTHERS           = 03.
CASE SY-SUBRC.
  WHEN 0.            " OK
  WHEN 01.    " to be implemented
  WHEN 02.    " to be implemented
  WHEN OTHERS.       " to be implemented
ENDCASE.

SWC_SET_ELEMENT CONTAINER 'YBapireturn' YBAPIRETURN.
SWC_SET_ELEMENT CONTAINER 'YError' YERROR.
SWC_SET_ELEMENT CONTAINER 'YEdiscdoc' YEDISCDOC.
SWC_SET_ELEMENT CONTAINER 'YEdiscact' YEDISCACT.
SWC_SET_ELEMENT CONTAINER 'YEdiscactStorno' YDISCACT_STORNO.
SWC_SET_ELEMENT CONTAINER 'YCommenttxt' YCOMMENTTXT.
SWC_SET_ELEMENT CONTAINER 'OrderStatus' YORDSTATE.
END_METHOD.

BEGIN_METHOD ZDISCONENTER CHANGING CONTAINER.
DATA:
      I_STATE   LIKE EDISCDOC-STATUS,
      DISACTION TYPE SWC_OBJECT,
      BEGIN OF I_OBJECT_KEY,
         DISCNO    LIKE EDISCACT-DISCNO,
         DISCACT   LIKE EDISCACT-DISCACT,
      END OF I_OBJECT_KEY,
      ETYPE LIKE EBAGEN-EXIT_TYPE,
      DISCONACTIVITYNO LIKE EDISCACT-DISCACT,
      AUTO  TYPE ISU05_DISCDOC_AUTO.
DATA: NEWORDER LIKE EDISCACT-NEWORDER.
DATA: ORDSTATE LIKE EDISCACT-ORDSTATE.

* if discondoc is closed => no further action
      SWC_GET_PROPERTY SELF 'State' I_STATE.
      IF I_STATE = '99'.
        EXIT_RETURN 1003 SPACE SPACE SPACE SPACE.
      ENDIF.

*     disconnection order-action
      AUTO-CONTR-USE-OKCODE    = 'X'.
      AUTO-CONTR-USE-INTERFACE = 'X'.
      AUTO-CONTR-OKCODE        = 'DCED'.
      SWC_GET_ELEMENT CONTAINER 'DisconActivityNo' DISCONACTIVITYNO.
      AUTO-INTERFACE-X_DISCACT =  DISCONACTIVITYNO.
  CALL FUNCTION 'ISU_S_DISCDOC_CHANGE'
       EXPORTING
            X_DISCNO       = OBJECT-KEY-NUMBER
            X_UPD_ONLINE   = 'X'
            X_NO_DIALOG    = 'X'
            X_AUTO         = AUTO
            X_NO_OTHER     = 'X'
       IMPORTING
*           Y_DB_UPDATE    =
            Y_EXIT_TYPE    = ETYPE
            Y_INTERFACE    = AUTO-INTERFACE
       EXCEPTIONS
            NOT_FOUND      = 1
            FOREIGN_LOCK   = 2
            NOT_AUTHORIZED = 3
*           input_error    = 4
            GENERAL_FAULT  = 5
            OTHERS         = 6.
  IF SY-SUBRC = 1.
    EXIT_OBJECT_NOT_FOUND.
  ELSEIF SY-SUBRC = 2.
*   locked
    EXIT_RETURN 1002 SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ELSEIF SY-SUBRC <> 0.
*   general fault
    EXIT_RETURN 1001 OBJECT-KEY-NUMBER SPACE SPACE SPACE.
  ENDIF.
  IF ETYPE = 'CANC'.
    EXIT_CANCELLED.
  ENDIF.
* refresh buffer
  SWC_REFRESH_OBJECT SELF.
* return values
  NEWORDER = AUTO-INTERFACE-Y_NEWORDER.
  ORDSTATE = AUTO-INTERFACE-Y_ORDSTATE.
  IF NOT AUTO-INTERFACE-Y_NEW_DISCACT IS INITIAL.
     MOVE OBJECT-KEY-NUMBER TO I_OBJECT_KEY-DISCNO.
     MOVE AUTO-INTERFACE-Y_NEW_DISCACT TO I_OBJECT_KEY-DISCACT.
     SWC_CREATE_OBJECT DISACTION 'DISACTION' I_OBJECT_KEY.
     IF SY-SUBRC EQ 0.
        SWC_SET_ELEMENT CONTAINER 'Disaction' DISACTION.
     ENDIF.
  ENDIF.
  SWC_SET_ELEMENT CONTAINER 'NewOrderRequested' NEWORDER.
  SWC_SET_ELEMENT CONTAINER 'OrderState' ORDSTATE.
END_METHOD.
